---
import { app } from "@lib/firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "@layouts/Layout.astro";
import SignIn from "@components/SignIn.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("session")) {
  const sessionCookie = Astro.cookies.get("session").value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/dashboard");
  }
}

---

<Layout title="Sign in">
  <SignIn />
</Layout>
<script>
  import {
    getAuth,
    signInWithEmailAndPassword,
    GoogleAuthProvider,
    signInWithPopup
  } from "firebase/auth";
  import { app } from "@lib/firebase/client";

  const auth = getAuth(app);
  const form = document.querySelector("form") as HTMLFormElement;
  const errorElement = document.getElementById("error");
  const loader = document.getElementById("loader")

  form.addEventListener("submit", async (e) => {
    errorElement.classList.add('hidden')
    loader.classList.remove('hidden')
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }

    try {
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const idToken = await userCredential.user.getIdToken();
      const response = await fetch("/api/auth/signin", {
        method: "GET",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (response.redirected) {
        window.location.assign(response.url);
      } else {
        // Hide loading animation
        //loadingElement.style.display = "none";
      }
    } catch (error) {
      // Show error alert
      loader.classList.add('hidden')
      errorElement.classList.remove('hidden')
    }

  });


  const googleSignin = document.querySelector("#google") as HTMLButtonElement;
  googleSignin.addEventListener("click", async () => {
    const provider = new GoogleAuthProvider();
    const userCredential = await signInWithPopup(auth, provider);
    const idToken = await userCredential.user.getIdToken();
    const res = await fetch("/api/auth/signin", {
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (res.redirected) {
      window.location.assign(res.url);
    }
  });
  
</script>

