---
import { app } from "@lib/firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { getAuth } from "firebase-admin/auth";
import Layout from "@layouts/Layout.astro";
import Back from '@components/Back.astro'

const auth = getAuth(app);
const db = getFirestore(app);

/* Check current session */
if (!Astro.cookies.has("session")) {
  return Astro.redirect("/signin");
}
const sessionCookie = Astro.cookies.get("session").value;
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
  return Astro.redirect("/signin");
}


const userRef = db.collection("users").doc(user.uid)
const userSnapshot = await userRef.get();
const userData = userSnapshot.data();

const {status, tariff} = userData

if(tariff==="basic"){
return Astro.redirect("/pay");
}

if(status ==="unpaid" || status ==="" || status ===null){
  return Astro.redirect("/price");	
}


interface Course {
  id: string;
  title: string;
  body: string;
  date: string;
}

const courseRef = db.collection("task1");
const courseSnapshot = await courseRef.get();
const courses = courseSnapshot.docs.map((doc) => ({
  id: doc.id,
  ...doc.data(),
})) as Course[];


---

<Layout title="Writing Task 1 Course">
<header class="flex items-center px-5 w-full sticky top-0 py-1 shadow-xl">
<Back/>
</header>

<!-- Timeline -->
<div class="text-gray-400 container sm:max-w-3xl mx-auto px-4 mb-5 pb-8 mt-6">

     {
      courses.map((course) => (
        <!-- Heading -->
  <div class="ps-2 my-2 first:mt-0">
    <h3 class="text-xs font-medium uppercase text-gray-400">
      {course.date}
    </h3>
  </div>
  <!-- End Heading -->

  <!-- Item -->
  <div class="flex gap-x-3 relative group rounded-lg bg-white/10">
    <a class="absolute inset-0 z-[1]" href={`/courses/task-1/${course.id}`}></a>

    <!-- Icon -->
    <div class="relative last:after:hidden after:absolute after:top-0 after:bottom-0 after:start-3.5 after:w-px after:-translate-x-[0.5px]  after:bg-gray-700 group-hover:after:bg-gray-600">
      <div class="relative z-10 w-7 h-7 flex justify-center items-center">
        <div class="w-2 h-2 rounded-full bg-white border-2 group-hover:border-gray-600 bg-gray-800 border-gray-600"></div>
      </div>
    </div>
    <!-- End Icon -->

    <!-- Right Content -->
    <div class="grow p-2 pb-8">
      <h3 class="flex gap-x-1.5 font-semibold text-white">
        <svg class="flex-shrink-0 w-4 h-4 mt-1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><polyline points="14 2 14 8 20 8"/><line x1="16" x2="8" y1="13" y2="13"/><line x1="16" x2="8" y1="17" y2="17"/><line x1="10" x2="8" y1="9" y2="9"/></svg>
        {course.title}
      </h3>
    </div>
    <!-- End Right Content -->
  </div>
  <!-- End Item -->
        
    ))
    }
  </div>  



</Layout>
