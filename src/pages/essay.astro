---
import { app } from "../lib/firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import { getFirestore } from "firebase-admin/firestore";


const auth = getAuth(app);
const db = getFirestore(app)

/* Check current session */
if (!Astro.cookies.has("session")) {
  return Astro.redirect("/signin");
}
const sessionCookie = Astro.cookies.get("session").value;
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
  return Astro.redirect("/signin");
}


const userRef = db.collection("users").doc(user.uid)
const userSnapshot = await userRef.get();
const userData = userSnapshot.data();

const {name, email, status, tariff, joined, expiresAt, telegramName} = userData

 const d = new Date();
    const y=d.getFullYear()
    const m=d.getMonth()+1
    const s=d.getDate()
    const today=`${s}-${m}-${y}`

if (today === expiresAt) {
  // Update user status to "unpaid" if today is greater than or equal to expiresAt
  userRef.update({
    status: "unpaid",
    expiresAt: "expired"
  }).then(() => {
    console.log("User status updated to 'unpaid'");
  }).catch((error) => {
    console.error("Error updating user status:", error);
  });
}

---

<Layout title="Essay">
<header class="py-4 w-full sticky top-0 bg-blue-600 shadow-lg flex justify-between items-center px-5 text-2xl font-semibold text-gray-100">
<h1>Edumo Essay Checker</h1>
<p>{telegramName}</p>
</header>
 <form id="essayForm" class="md:colums-2 flex flex-col justify-start items-center">
    <h1 class="text-3xl font-semibold py-4 text-gray-100">Check IELTS Writing</h1>
    <div contenteditable="true" class="container mt-5 mx-auto px-4 p-4 text-gray-200 outline-none bg-gray-900 rounded-lg border-2 border-gray-800 font-bold" id="question" name="question" data-text="Essay savolini kiriting...">
    </div>
    <div contenteditable="true" class="mt-5 container mx-auto px-4 bg-gray-900 text-gray-200 italic outline-none p-4 border-2 border-gray-800 rounded-lg" id="essay" name="essay" data-text="Essayni yozing yoki tashlang..." style="min-height: 150px"></div>
    <button disabled="true" id="btn" class="flex items-center mt-4 mb-3 bottom-3 px-8 bg-blue-600 text-white text-lg rounded-lg py-2 px-4 font-semibold shadow-xl" type="button" onclick="submitEssay()">
    <svg xmlns="http://www.w3.org/2000/svg" class="fill-white w-6 h-6 x-2" viewBox="0 0 24 24"><path fill="currentColor" d="m11.602 13.76l1.412 1.412l8.466-8.466l1.414 1.415l-9.88 9.88l-6.364-6.365l1.414-1.414l2.125 2.125l1.413 1.412Zm.002-2.828l4.952-4.953l1.41 1.41l-4.952 4.953l-1.41-1.41Zm-2.827 5.655L7.364 18L1 11.636l1.414-1.414l1.413 1.413l-.001.001l4.951 4.951Z"/></svg>
     Check Essay</button>
  </form>

  <div class="hidden w-full  min-h-screen absolute top-0 left-0 bg-gray-900 text-white text-xl flex flex-col justify-center items-center" id="resultContainer">

 
 <svg id="close" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 text-emerald-500 float-right">
  <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
</svg>


  <h1 class="my-4 text-3xl font-bold">Writing Assessment</h1>
   <ul class="my-4 container mx-auto px-4">
    <li id="result"><li>
   </ul>
  </div>

</Layout>
<style>




[contentEditable=true]:empty:not(:focus):before {
  content: attr(data-text)
}

 .paragraph { margin-bottom: 10px; }
    .color-1 { color: blue; }
    .color-2 { color: green; }
    .color-3 { color: purple; }
    .color-4 { color: orange; }
    .color-5 { color: red; }
    .color-6 { color: brown; }
    .color-7 { color: teal; }

</style>



<script is:inline>

      if(document.getElementById("essay").innerHTML===""){
       document.getElementById('btn').setAttribute("disabled", "true")
      }

       document.getElementById("essay").addEventListener('input', ()=>{
        document.getElementById('btn').removeAttribute("disabled")

    })

    async function submitEssay() {
    document.getElementById('btn').innerText="Evaluating..."
    document.getElementById("question").setAttribute('contenteditable','false')

    document.getElementById("essay").setAttribute('contenteditable','false')

    document.getElementById("close").addEventListener('click', ()=>{
        document.getElementById('resultContainer').classList.add('hidden')
        document.getElementById('btn').classList.add('hidden')
        document.getElementById('essayForm').classList.remove('hidden')
    })

      const essay = document.getElementById("essay").innerText;
      const question = document.getElementById("question").innerText
      

      const response = await fetch('/api/check', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ essay, question }),
      });

      const result = await response.json();

      const resultContainer = document.getElementById('resultContainer');
      document.getElementById('essayForm').classList.add('hidden')
      const resultDiv = document.getElementById('result');

      resultContainer.classList.remove('hidden');
      resultDiv.innerHTML = "";

      
      result.choices[0].text.split('\n').forEach((paragraph, index) => {
        const paragraphElement = document.createElement('p');
        paragraphElement.innerHTML = paragraph;
        resultDiv.appendChild(paragraphElement);
      });
      
    }
  </script>
