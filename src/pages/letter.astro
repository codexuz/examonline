---
import { app } from "../lib/firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import { getFirestore } from "firebase-admin/firestore";


const auth = getAuth(app);
const db = getFirestore(app)

/* Check current session */
if (!Astro.cookies.has("session")) {
  return Astro.redirect("/signin");
}
const sessionCookie = Astro.cookies.get("session").value;
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
  return Astro.redirect("/signin");
}


const userRef = db.collection("users").doc(user.uid)
const userSnapshot = await userRef.get();
const userData = userSnapshot.data();

const {status, tariff, telegramName} = userData

if(tariff==="basic" || tariff==="" || tariff===null){
return Astro.redirect("/pay");
}

if(status==="unpaid" || status===""){
return Astro.redirect("/price");
}

---

<Layout title="Letter">
   <header class="py-4 w-full sticky top-0 bg-orange-500 shadow-lg flex justify-between items-center px-5 text-lg font-semibold text-gray-50">
    <h1>Edumo Letter Checker</h1>
    <p>{telegramName}</p>
    </header>
  <form id="essayForm" class=" flex flex-col justify-start items-center">
    <h1 class="text-3xl font-semibold py-4 text-gray-100">Check Your Letter</h1>
    <div  class="container mt-5 mx-auto px-4 p-4 text-gray-200 outline-none bg-gray-900 rounded-lg border-2 border-gray-800 font-bold" id="question" name="question" data-text="Xat savolini kiriting...">
    </div>
    <div   class="mt-5 container mx-auto px-4 bg-gray-900 text-gray-200 italic outline-none p-4 border-2 border-gray-800 rounded-lg" id="essay" name="essay" data-text="Xatni yozing yoki tashlang..." style="min-height: 150px"></div>
    <button id="btn" class="flex items-center mt-4 mb-3 bottom-3 px-8 bg-orange-500 text-white text-lg rounded-lg py-2 px-4 font-semibold shadow-xl" type="button"  disabled>
    <svg xmlns="http://www.w3.org/2000/svg" class="fill-white w-6 h-6 x-2" viewBox="0 0 24 24"><path fill="currentColor" d="m11.602 13.76l1.412 1.412l8.466-8.466l1.414 1.415l-9.88 9.88l-6.364-6.365l1.414-1.414l2.125 2.125l1.413 1.412Zm.002-2.828l4.952-4.953l1.41 1.41l-4.952 4.953l-1.41-1.41Zm-2.827 5.655L7.364 18L1 11.636l1.414-1.414l1.413 1.413l-.001.001l4.951 4.951Z"/></svg>
     Check Letter</button>
  </form>

 <!-- Toast -->
  <div id="alert" class="hidden absolute bottom-2 start-1/2 transform -translate-y-1/2 -translate-x-1/2">

<div class="max-w-xs bg-gray-900 text-sm text-white rounded-xl shadow-lg dark:bg-gray-900" role="alert">
  <div class="flex p-4">
    You did not provide any essay or essay words is lower than expected

    <div class="ms-auto">
      <button type="button" class="inline-flex flex-shrink-0 justify-center items-center h-5 w-5 rounded-lg text-white hover:text-white opacity-50 hover:opacity-100 focus:outline-none focus:opacity-100">
        <span class="sr-only">Close</span>
        <svg id="toggle-close" class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
      </button>
    </div>
  </div>
</div>
</div>
<!-- End Toast -->

  <div class="hidden w-full  min-h-screen absolute top-0 left-0 bg-gray-900 text-white text-xl flex flex-col justify-center items-center" id="resultContainer">

 
 <svg id="close" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 text-emerald-500 float-right">
  <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
</svg>


  <h1 class="my-4 text-3xl font-bold">Writing Assessment</h1>
   <ul class="my-4 container mx-auto px-4">
    <li id="result"><li>
   </ul>
  </div>

</Layout>
<style>




[contentEditable=true]:empty:not(:focus):before {
  content: attr(data-text)
}

 .paragraph { margin-bottom: 10px; }
    .color-1 { color: blue; }
    .color-2 { color: green; }
    .color-3 { color: purple; }
    .color-4 { color: orange; }
    .color-5 { color: red; }
    .color-6 { color: brown; }
    .color-7 { color: teal; }

</style>





<script>
  
$(function () {

 $("#essay").toTextarea({allowHTML: true, allowImg: true});
$("#question").toTextarea({allowHTML: false, allowImg: false});


$('#alert').click(()=>{
    $("#alert").fadeOut('2000')
   })
   
    function validateForm() {
    var questionText = document.getElementById("question").innerText.trim();
    var essayText = document.getElementById("essay").innerText.trim();
    var btn = document.getElementById("btn");

    if (questionText !== "" && essayText !== "") {
        btn.disabled = false;

    } else {
        btn.disabled = true;
    }
}

$('#btn').click(async()=>{
  var questionText = document.getElementById("question").innerText.trim();
    var essayText = document.getElementById("essay").innerText.trim();
    var btn = document.getElementById("btn");

    // Count the number of words in the essay
    var wordCount = essayText.split(/\s+/).filter(function (word) {
        return word.length > 0;
    }).length;

    if (questionText !== "" && essayText !== "") {
        btn.disabled = false;

        // Check if the essay has fewer than 80 words and show a toast
        if (wordCount < 80) {
            showToast();
            return
        }
    } else {
        btn.disabled = true;
        return
    }

    document.getElementById('btn').innerText="Evaluating..."
    document.getElementById("question").setAttribute('contenteditable','false')

    document.getElementById("essay").setAttribute('contenteditable','false')

    document.getElementById("close").addEventListener('click', ()=>{
        document.getElementById('resultContainer').classList.add('hidden')
        document.getElementById('btn').classList.add('hidden')
        document.getElementById('essayForm').classList.remove('hidden')
    })

      const question = $("#question").text()
      const letter= $("#essay").text()
      
      try {
    const letterObject = { letter, question }; // Create a valid JSON object
    const jsonString = JSON.stringify(letterObject);
    console.log(jsonString)
    const response = await fetch('/api/letter', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: jsonString,
    });

    const result = await response.json();
    const resultContainer = document.getElementById('resultContainer');
    document.getElementById('essayForm').classList.add('hidden');
    const resultDiv = document.getElementById('result');

    resultContainer.classList.remove('hidden');
    resultDiv.innerHTML = "";

    result.choices[0].text.split('\n').forEach((paragraph, index) => {
      const paragraphElement = document.createElement('p');
      paragraphElement.innerHTML = paragraph;
      resultDiv.appendChild(paragraphElement);
    });
  } catch (error) {
    console.error("Error sending JSON data:", error);
  }
})
    

    


function showToast() {
    $("#alert").fadeIn('1000')
}

document.getElementById("question").addEventListener('click', validateForm)
document.getElementById("essay").addEventListener('click', validateForm)

});
</script>

