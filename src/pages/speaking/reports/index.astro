---
import Layout from "@layouts/Layout.astro";
import Header from '@components/report/Header.astro'

---
<Layout title="Speaking Report">
  
  <Header
  link="window.location.href='/dashboard/index.html'"
  />

<main class="my-4 pt-6">
  <ul class="container grid grid-cols-1 gap-3 mx-auto px-5 " id="report-list">

  </ul>
  </main>

</Layout>

<script>
  import { db } from "@lib/firebase/client";
import { doc, getDocs, collection, onSnapshot } from "firebase/firestore";

var user = JSON.parse(localStorage.getItem('user'));

function generateReportLink(reportId) {
  return `/speaking/reports/details?id=${reportId}`;
}

function fetchReportsAndUpdateLocalStorage() {
  let reports = [];

  const docRef = doc(db, "users", user.uid);
  const reportsCollectionRef = collection(docRef, 'report');

  getDocs(reportsCollectionRef)
    .then((querySnapshot) => {
      querySnapshot.forEach((doc) => {
        var answers = {
          id: doc.id,
          data: doc.data()
        };

        reports.push(answers);
      });

      localStorage.setItem('reports', JSON.stringify(reports));

      renderReports(reports);
    })
    .catch((error) => {
      console.error("Error getting documents: ", error);
    });
}

function renderReports(reports) {
  let data = "";
  reports.forEach((report) => {
    const link = generateReportLink(report.id);
    data += `<a class="flex justify-between items-center p-3  bg-blue-600 text-white rounded-2xl" data-astro-reload href="${link}">
      <div class="mx-2">
        <p><small>${report.data.submitTime}</small></p>
        <p class="text-sm">${report.data.textNo}</p>
      </div>
      <svg xmlns="http://www.w3.org/2000/svg" class="mx-2 icon icon-tabler icon-tabler-chevron-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6" /></svg>
    </a>`;
  });

  document.getElementById('report-list').innerHTML = data;
}

function updateReportsAndLocalStorage(reports) {
  localStorage.setItem('reports', JSON.stringify(reports));
  renderReports(reports);
}

const storedReports = localStorage.getItem('reports');
if (storedReports && navigator.onLine) {
  renderReports(JSON.parse(storedReports));
} else {
  fetchReportsAndUpdateLocalStorage();
}

const docRef = doc(db, "users", user.uid);
const reportsCollectionRef = collection(docRef, 'report');

onSnapshot(reportsCollectionRef, (querySnapshot) => {
  let reports = [];
  querySnapshot.forEach((doc) => {
    var answers = {
      id: doc.id,
      data: doc.data()
    };
    reports.push(answers);
  });

  if (navigator.onLine) {
    updateReportsAndLocalStorage(reports);
  }
});
</script>
